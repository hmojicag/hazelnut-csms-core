using Hazelnut.Core.DropboxApiV2; 
using System.Threading.Tasks;
using Hazelnut.Core.DropboxApiV2.Users;
using System;
using System.IO;
using System.Text;

namespace Hazelnut.Core {
    public class HCloudSync {

        public HCloudSync() {

            //This is just a test for the DropBox API
            string oauth2AccessToken = "YkSN6i4mCBAAAAAAAAAAB7ElQjewrG1XmIw9W1tEWDZfofOBjMqWXKUabW76_Yb_";
            DropboxClient dbx = new DropboxClient(oauth2AccessToken);
            //getAccount(dbx).Wait();
            //ListFullDropBox(dbx).Wait();
            //DownloadAsync(dbx).Wait();
            UploadAsync(dbx).Wait();
        }

        //DUMMY CODE THAT SHOULD BE DELETED
        private async Task getAccount(DropboxClient dbx) {
            Account account = await dbx.GetCurrentAccountAsync();
        }

        private async Task ListFullDropBox(DropboxClient dbx) {
            await dbx.ListFullDropBoxAsync();
        }

        private async Task DownloadAsync(DropboxClient dbx) {
            MemoryStream memoryStream = await dbx.DownloadAsync("id:-sUUqp8epSAAAAAAAAAABA");
            using (System.IO.FileStream fs = System.IO.File.Create(@"C:\testfolder\lol.pdf"))
            {
                memoryStream.WriteTo(fs);
            }
        }

        private async Task UploadAsync(DropboxClient dbx) {
            MemoryStream memoryStream = new MemoryStream();
            UnicodeEncoding uniEnconding = new UnicodeEncoding();
            byte[] testFileContent = uniEnconding.GetBytes(
                "This is an auto generated test file"
            );
            memoryStream.Write(testFileContent, 0, testFileContent.Length);
            string fileName = "/autoGeneratedTestFile-" + DateTime.Now.ToString("dd-MM-yyyy_hh_mm") + ".txt";
            await dbx.UploadAsync(memoryStream, fileName);
        }

    }
}